import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

public class Solution {

    // Complete the migratoryBirds function below.
    static int migratoryBirds(List<Integer> arr) {
        int t1=0,t2=0,t3=0,t4=0,t5=0;
        int max = 0;
        int max_type = 0;
        int []ar = new int[]{0,0,0,0,0};
        for(int i=0; i<arr.size(); i++){
                if(arr.get(i) ==1 ){
                    ar[0]++;
                }
                if(arr.get(i) ==2 ){
                    ar[1]++;
                }if(arr.get(i) ==3 ){
                    ar[2]++;
                }if(arr.get(i) ==4 ){
                    ar[3]++;
                }if(arr.get(i) ==5 ){
                    ar[4]++;
                }
                
        }
        for(int j=0; j<5;j++){
                if(max<ar[j]){

                    max = ar[j];
                    max_type = j+1;
                }
                
            }
            
        


return max_type;

    }

    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int arrCount = Integer.parseInt(bufferedReader.readLine().trim());

        List<Integer> arr = Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
            .map(Integer::parseInt)
            .collect(toList());

        int result = migratoryBirds(arr);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
